setwd("~/Downloads/_Machine Learning/Machine Learning A-Z Template Folder/Part 6 - Reinforcement Learning/Section 33 - Thompson Sampling")
# Thompson Sampling
# Importing the dataset
dataset = read.csv('Ads_CTR_Optimisation.csv')
# Random Selection
N = 10000
d = 10
ads_selected = integer()
number_of_rewards_1 = integer (d)
number_of_rewards_0 = integer (d)
total_reward = 0
for (n in 1:N) {
ad = 0
max_random = 0
for (i in 1:d) {
random_beta = rbeta(n = 1,
shape1 = number_of_rewards_1[i] + 1,
shape2 = number_of_rewards_0[i] + 1)
if (random_beta > max_random) {
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if (reward = 1) {
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
# Visualising the results
hist(ads_selected,
col = 'blue',
main = 'Histogram of Ad Selection',
xlab = 'Ad',
ylab = 'Number of Selections')
dataset = read.csv('Ads_CTR_Optimisation.csv')
# Random Selection
N = 10000
d = 10
ads_selected = integer()
number_of_rewards_1 = integer (d)
number_of_rewards_0 = integer (d)
total_reward = 0
for (n in 1:N) {
ad = 0
max_random = 0
for (i in 1:d) {
random_beta = rbeta(n = 1,
shape1 = number_of_rewards_1[i] + 1,
shape2 = number_of_rewards_0[i] + 1)
if (random_beta > max_random) {
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if (reward = 1) {
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
for (n in 1:N) {
ad = 0
max_random = 0
for (i in 1:d) {
random_beta = rbeta(n = 1,
shape1 = number_of_rewards_1[i] + 1,
shape2 = number_of_rewards_0[i] + 1)
if (random_beta > max_random) {
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if (reward = 1) {
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
for (n in 1:N) {
ad = 0
max_random = 0
for (i in 1:d) {
random_beta = rbeta(n = 1,
shape1 = number_of_rewards_1[i] + 1,
shape2 = number_of_rewards_0[i] + 1)
if (random_beta > max_random) {
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if (reward = 1) {
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
else {
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
for (n in 1:N) {
ad = 0
max_random = 0
for (i in 1:d) {
random_beta = rbeta(n = 1,
shape1 = number_of_rewards_1[i] + 1,
shape2 = number_of_rewards_0[i] + 1)
if (random_beta > max_random) {
max_random = random_beta
ad = i
}
}
ads_selected = append(ads_selected, ad)
reward = dataset[n, ad]
if (reward == 1) {
number_of_rewards_1[ad] = number_of_rewards_1[ad] + 1
}
else {
number_of_rewards_0[ad] = number_of_rewards_0[ad] + 1
}
total_reward = total_reward + reward
}
hist(ads_selected,
col = 'blue',
main = 'Histogram of Ad Selection',
xlab = 'Ad',
ylab = 'Number of Selections')
